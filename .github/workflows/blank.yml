import { useState } from "react"; import { Button } from "@/components/ui/button"; import { Card, CardContent } from "@/components/ui/card"; import { motion } from "framer-motion"; import { FaWallet } from "react-icons/fa"; import Image from "next/image";

export default function LobusherLanding() { const [walletConnected, setWalletConnected] = useState(false);

const connectWallet = async () => { if (typeof window.ethereum !== "undefined") { try { await window.ethereum.request({ method: "eth_requestAccounts" }); setWalletConnected(true); } catch (error) { console.error("Connection error:", error); } } else { alert("MetaMask –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"); } };

return ( <div className="min-h-screen bg-gradient-to-br from-[#1e1e2f] to-[#0c0c15] text-white p-6 flex flex-col items-center justify-center"> <motion.h1 initial={{ opacity: 0, y: -40 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.8 }} className="text-5xl font-bold mb-4 text-orange-400" > LOBUSHER </motion.h1>

<Image
    src="/lobusher.png"
    alt="Lobusher"
    width={300}
    height={300}
    className="rounded-2xl shadow-lg mb-6"
  />

  <p className="text-xl mb-4 max-w-xl text-center">
    –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä Lobusher. –ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —Ç–æ–∫–µ–Ω $LOBU —Å —Ñ–∏–ª–æ—Å–æ—Ñ–∏–µ–π –º–∞–≥–∏–∏ –∏ —Ö–∞–æ—Å–∞. –ü–æ–∫—É–ø–∞–π, —Ö—Ä–∞–Ω–∏, –∏—Å—Å–ª–µ–¥—É–π.
  </p>

  <div className="flex gap-4 mb-6">
    <Button onClick={connectWallet} className="bg-orange-500 hover:bg-orange-600 text-lg">
      <FaWallet className="mr-2" />
      {walletConnected ? "–ö–æ—à–µ–ª—ë–∫ –ø–æ–¥–∫–ª—é—á—ë–Ω" : "–ü–æ–¥–∫–ª—é—á–∏—Ç—å MetaMask"}
    </Button>

    <a
      href="https://pancakeswap.finance/swap?outputCurrency=0xYourTokenAddress"
      target="_blank"
      rel="noopener noreferrer"
    >
      <Button className="bg-green-500 hover:bg-green-600 text-lg">
        –ö—É–ø–∏—Ç—å $LOBU
      </Button>
    </a>
  </div>

  <Card className="bg-[#2e2e3d] text-white max-w-xl">
    <CardContent className="p-6">
      <h2 className="text-2xl font-bold mb-2">üìú Whitepaper</h2>
      <p className="mb-4">
        –û–∑–Ω–∞–∫–æ–º—å—Å—è —Å –ø–æ–ª–Ω–æ–π —Ñ–∏–ª–æ—Å–æ—Ñ–∏–µ–π –∏ —Ç–æ–∫–µ–Ω–æ–º–∏–∫–æ–π Lobusher. –£–∑–Ω–∞–π, –∫–∞–∫ –æ–Ω —Å–≤—è–∂–µ—Ç –º–∏—Ä NFT, Web3 –∏ –º–∞–≥–∏–∏.
      </p>
      <a
        href="/whitepaper.pdf"
        download
        className="underline text-orange-400 hover:text-orange-300"
      >
        –°–∫–∞—á–∞—Ç—å Whitepaper
      </a>
    </CardContent>
  </Card>
</div>

); }

# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
